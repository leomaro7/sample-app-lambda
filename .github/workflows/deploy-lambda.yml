name: Deploy AWS Lambda Function

# トリガー: push, pull_request 
on:
  push:
    branches: 
      - main
    paths:
      - 'src/**'
      - 'requirements.txt'
      - '.github/workflows/deploy-lambda.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'
      - 'requirements.txt'
      - '.github/workflows/deploy-lambda.yml'

# 環境変数
env:
  PYTHON_VERSION: '3.13'
  AWS_REGION: 'ap-northeast-1'

# ジョブ定義
jobs:
  # テストジョブ
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest boto3 moto
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: |
          python -m pytest tests/ -v || echo "No tests found - skipping test execution"

  # デプロイジョブ
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t ./dist/; fi

      - name: Copy source code to dist directory
        run: |
          mkdir -p dist
          cp -r src/* dist/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      
      ### Lambda 関数のデプロイ ###
      - name: Deploy Lambda Function
        uses: aws-actions/aws-lambda-deploy@v1
        with:
          function-name: sample-lambda-function
          code-artifacts-dir: ./dist
          handler: lambda_function.lambda_handler
          runtime: python3.13
          memory-size: 128
          timeout: 30
          environment: '{"ENVIRONMENT":"production","LOG_LEVEL":"INFO"}'

  dry-run-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t ./dist/; fi

      - name: Copy source code to dist directory
        run: |
          mkdir -p dist
          cp -r src/* dist/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Dry Run Lambda Deployment
        uses: aws-actions/aws-lambda-deploy@v1
        with:
          function-name: ${{ secrets.LAMBDA_FUNCTION_NAME }}
          code-artifacts-dir: ./dist
          handler: lambda_function.lambda_handler
          runtime: python3.13
          memory-size: 128
          timeout: 30
          function-description: "Sample Lambda function deployed via GitHub Actions"
          environment: '{"ENVIRONMENT":"staging","LOG_LEVEL":"DEBUG"}'
          dry-run: true